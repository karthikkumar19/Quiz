{"version":3,"sources":["hoc/Aux/Aux.js","components/UI/Spinner/Spinner.js","components/UI/Input/input.js","components/UI/Input/input.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","container/Addprofile/addprofile.module.css","container/Addprofile/addpro.js"],"names":["aux","props","children","spinner","className","classes","Loader","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","backdrop","show","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","Aux","modalClosed","style","transform","opacity","Component","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","Addpro","orderForm","name","type","placeholder","validation","required","valid","ownerName","email","isEmail","phno","isNumeric","pocnumber","regoffice","proSite","cinNo","yearofexb","dcb","panNo","gst","uam","Ra","proser","industry","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","console","log","profile","userId","onAddData","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","formElementsArray","id","config","purchasedRedirect","purchased","to","form","onSubmit","formElement","btnType","loading","PageData","connect","auth","dispatch","proData","actions"],"mappings":"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","file":"static/js/4.f349a888.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","  \nimport React from 'react';\n\nimport classes from './input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div>\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n        </div>\n    );\n\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3BPgK\",\"Label\":\"input_Label__24bIE\",\"InputElement\":\"input_InputElement__2HI6E\",\"Invalid\":\"input_Invalid__3QqA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    UNSAFE_componentWillUpdate () {\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        UNSAFE_componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageData\":\"addprofile_PageData__2-Uqt\",\"Form\":\"addprofile_Form__3cIGJ\",\"EditData\":\"addprofile_EditData__24DTY\"};","import React, { Component } from 'react';\n// import Button from '../Components/UI/Button/button';\nimport {connect} from 'react-redux';\nimport {  Redirect } from 'react-router-dom';\nimport classes from './addprofile.module.css';\n// import axios from '../axios-orders';\nimport axios from 'axios';\nimport Input from '../../components/UI/Input/input';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport {updateObject, checkValidity} from '../../shared/utility';\n\n\nclass Addpro extends Component {\n\n\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name of the company'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            ownerName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name of owner'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: `Company's e-mail id`\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail:true\n                },\n                valid: false,\n                touched: false\n            },\n            phno: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: `Company's Ph no`\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isNumeric:true\n                },\n                valid: false,\n                touched: false\n            },\n            pocnumber: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'POC contact number'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isNumeric:true\n                },\n                valid: false,\n                touched: false\n            },\n            regoffice: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Registered Office'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            proSite: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Project Site'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            cinNo: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'CIN NO.'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            yearofexb: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Year of Establishment'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            dcb: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'date',\n                    placeholder: 'Date of Commenencement of Business'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            panNo: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'PAN NO/ TAN NO'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            gst: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'GST NO'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            uam: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'UAM No. / Aadhaar No'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            Ra: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Rating Assigned'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isNumeric:true\n                },\n                valid: false,\n                touched: false\n            },\n            proser: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Product / Service'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            industry: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Industry Sector'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        formIsValid: false,\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        const formData = {};\n        console.log(this.state.orderForm);\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        console.log(formData);\n        const profile = {\n            formData:formData,\n            userId:this.props.userId\n        }\n        this.props.onAddData(profile,this.props.token);\n            \n    }\n\n    \n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier],{\n                value:event.target.value,\n                valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n                touched:true\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]:updatedFormElement\n        });\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n   \n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        const purchasedRedirect = this.props.purchased ? <Redirect to='/main' /> : null;\n        let form = (\n            <div >\n            {purchasedRedirect}\n            <form  onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <div >\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                        </div>\n                ))}\n                <button btnType=\"Success\" >SUBMIT</button>\n            </form>\n            </div>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.PageData}>\n                <h4>Add your SME Data</h4>\n                {form}\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return{\n        loading:state.auth.loading,\n        purchased:state.auth.purchased,\n        token: state.auth.token,\n        userId:state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onAddData : (proData,token) => dispatch(actions.addData(proData,token)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Addpro,axios));"],"sourceRoot":""}