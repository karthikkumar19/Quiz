{"version":3,"sources":["shared/utility.js","store/actions/auth.js","store/actions/actionTypes.js","container/Auth/Logout/Logout.js","hoc/asyncComponent/asynComponent.js","App.js","store/reducers/auth.js","index.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","authSuccess","idToken","localId","type","actionTypes","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","catch","err","error","setAuthRedirectPath","path","authCheckState","token","getItem","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","Logout","console","log","this","props","onLogout","to","Component","connect","actions","asyncComponent","importComponent","state","component","cmp","setState","default","C","asyncGuest","asyncHome","asyncSmelogin","asyncMain","App","onTryAutoSignup","routes","exact","isAuthenticated","React","withRouter","initialState","loading","authRedirectPath","authStart","action","authFail","authLogout","authReducer","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52b561a8.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n    return{\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authstart = () => {\n    return{\n        type:actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (idToken,localId) => {\n    return{\n        type:actionTypes.AUTH_SUCCESS,\n        idToken:idToken,\n        userId:localId\n    }\n}\n\nexport const authFail = (error) => {\n    return{\n        type:actionTypes.AUTH_FAIL,\n        error:error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return{\n        type:actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        },expirationTime * 1000);\n    };\n};\n\nexport const auth = (email,password,isSignup) => {\n    return dispatch => {\n        dispatch(authstart());\n        const authData = {\n            email:email,\n            password:password,\n            returnSecureToken:true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=  AIzaSyCXz6aRRnjsWvWtlF6mgWbubu9ag4gF55c';\n        if(!isSignup){\n           url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXz6aRRnjsWvWtlF6mgWbubu9ag4gF55c';\n        }\n        axios.post(url,authData)\n        .then(response => {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token',response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId',response.data.localId);\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error));\n        });\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return{\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\n        path:path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()){\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","// export const ADD_DATA_START = 'ADD_DATA_START';\n// export const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\n// export const ADD_DATA_FAIL = 'ADD_DATA_FAIL';\n// export const ADD_DATA_INIT = 'ADD_DATA_INIT';\n\n\n// export const FETCH_DATA_START = 'FETCH_DATA_START';\n// export const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\n// export const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\n// export const SEARCH_DATA = 'SEARCH_DATA';\n\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, {Component} from 'react';\nimport * as actions from '../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\n\nclass Logout extends Component {\n\n        componentDidMount () {\n            console.log(\"logout\");\n                this.props.onLogout();\n        }\n\n    render(){\n        return <Redirect to=\"/\" />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onLogout : () => dispatch(actions.logout()),\n    };\n};\n\nexport default connect(null,mapDispatchToProps) (Logout);","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default});\n                });\n        }\n        \n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Logout from './container/Auth/Logout/Logout';\nimport* as actions from './store/actions/index';\nimport {connect} from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asynComponent';\nimport './App.css';\n\n// const asyncAddData = asyncComponent(() => {\n//   return import('./container/AddData');\n// });\n\nconst asyncGuest = asyncComponent(() => {\n  return import('./container/guest/guest');\n})\n\nconst asyncHome = asyncComponent(()=>{\n  return import('./container/home/home');\n})\n\nconst asyncSmelogin = asyncComponent(() => {\n  return import('./container/Auth/Auth')\n})\n\nconst asyncMain = asyncComponent(()=>{\n  return import('./container/Main/main');\n})\n\n\n\n\nclass App extends React.Component  {\n\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n  \nrender(){\n\n  let routes = (\n    <Switch>\n      \n      <Route path=\"/\" exact component={asyncHome}  />\n      <Route path=\"/guest\" exact component={asyncGuest}/>\n      <Route path=\"/smeauth\" exact component={asyncSmelogin} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if ( this.props.isAuthenticated ) {\n    console.log(this.props.isAuthenticated);\n    routes = (\n      <Switch>\n        <Route path=\"/logout\" exact component={Logout} /> \n        <Route path=\"/\" exact component={asyncHome}  />\n      <Route path=\"/guest\" exact component={asyncGuest}/>\n      <Route path=\"/smeauth\" exact component={asyncSmelogin} />\n      <Route path=\"/main\" exact component={asyncMain}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n      }\n  \n  return(\n    <div >\n       {/* <Helmet>\n                <style>{'body { background: #5D5F71;  }'}</style>\n            </Helmet> */}\n    \n    {routes}\n </div>\n  )\n}\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    token:null,\n    userId:null,\n    error:null,\n    loading:false,\n    authRedirectPath: '/main'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error:null, loading:true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token:action.idToken,\n        userId:action.userId,\n        error:null,\n        loading:false\n    });\n}\n\nconst authFail = (state,action) => {\n    return updateObject(state,{\n        error:action.error,\n        loading:false\n    });\n}\n\nconst authLogout = (state,action) => {\n    return updateObject(state,{\n        token:null,\n        userId:null\n    })\n};\n\nconst setAuthRedirectPath = (state,action) => {\n    return updateObject(state,{\n        authRedirectPath:action.path\n    });\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:return authStart(state,action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default: return state\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose,combineReducers} from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n<Provider store={store}>\n<BrowserRouter>\n    <App />\n    </BrowserRouter>\n</Provider>\n)\n\nReactDOM.render(app,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}