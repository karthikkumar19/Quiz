{"version":3,"sources":["quiz/AddQuiz/addquiz.module.css","quiz/quiz.js","quiz/AddQuiz/addquiz.js","quiz/home.js","App.js","shared/utility.js","store/reducers/auth.js","store/actions/actionTypes.js","store/reducers/profiles.js","index.js","quiz/quiz.module.css"],"names":["module","exports","Quiz","state","questions","score","disabled","data","start","ques1","setState","onInputChange","event","ind","nexState","map","question","QuestionName","target","name","options","opt","checked","value","selected","check","op","console","log","answer","submit","this","props","disp","Card","className","classes","card","Body","lo","idx","radio","key","type","onChange","main","title","Button","variant","button","onClick","Component","Addquiz","handleNo","preventDefault","inputField","index","htmlFor","id","option","update","$set","handleInputChange","indexs","values","splice","OnhandleRemoveFields","push","OnhandleAddFields","inputMain","InputGroup","Prepend","Text","FormControl","placeholder","aria-describedby","add","JSON","stringify","React","Home","useState","toogle","setToogle","setQuestions","e","App","updateObject","oldObject","updatedProperties","initialState","pages","purchased","token","userId","error","loading","form","authRedirectPath","authStart","action","authSuccess","idToken","redirectPath","authFail","authLogout","setAuthRedirectPath","path","addDataInit","addDataStart","addDataSuccess","newPage","pageData","pageId","concat","addDataFail","authReducer","profiles","fetchDataStart","fetchDataSuccess","fetchDataFail","profilesReducer","composeEnhancers","compose","rootReducer","combineReducers","auth","prodata","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a782765e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMain\":\"addquiz_inputMain__1IcIB\",\"Form\":\"addquiz_Form__2S4kW\"};","import React,{Component} from 'react';\nimport {Card,Button} from 'react-bootstrap';\nimport classes from './quiz.module.css';\n\nclass Quiz extends Component{\n  \n  state={\n    questions:[],\n    score:0,\n    disabled:false\n  }\n  \ncomponentDidMount(){\n    this.questions(this.props.data);\n    console.log(this.props.data)\n}\n  \n\n \n questions = (data) => {\n    \n    \n   \n    this.start(data);\n}\nstart = (ques1) => {\n    this.setState({questions:ques1})\n}\n\nonInputChange = (event,ind) => {\n    const { questions } = this.state;\n\n    const nexState = questions.map(question => {\n      if (question.QuestionName !== event.target.name) return question;\n      return {\n        ...question,\n        options: question.options.map(opt => {\n          const checked = opt.name === event.target.value;\n       \n          return {\n            ...opt,\n            selected: checked\n          }\n        })\n      }\n    });\n    this.setState({ questions: nexState })\n// console.log(this.state.score)\n  }\n\n\n   score = 0;\n\n  check = () => {\n      this.state.questions.map((question) => {\n          question.options.map((op)=>{\n            console.log(op)\n              if(op.selected === true){\n                console.log(op.name)\n                if(op.name === question.answer ){\n                  console.log('corret')\n                 this.score = this.score + 1;\n              }else{\n                this.score = this.score;\n              }\n            }\n          })\n      })\n      this.setState({score: this.score})\n  }\n\n  submit = () => {\n      this.check();\n      console.log(this.state.score)\nthis.setState({disabled:true})\n  }\n\n    render(){\n\n       let disp = <h1>loading</h1>\n       let answer = <h1>hello</h1>\n       if(this.state.questions!=null){\n       let questions = this.state.questions;\n        disp = questions.map((question,ind) => {\n            return(\n                <div>\n                  <Card className={classes.card}>\n  <Card.Body>\n  <h3>{question.QuestionName}</h3>                  \n                    {\n                    question.options.map((lo, idx) => {\n                      return (\n                            <label  className={classes.radio}>\n                          <input\n                        key={idx}\n                        type=\"radio\"\n                       \n                        name={question.QuestionName}\n                        value={lo.name}\n                        checked={lo.selected}\n                        onChange={(event) =>  this.onInputChange(event,ind)}\n                       \n                      /> {lo.name}\n                      </label>\n                      )\n\n                    })\n                }\n  </Card.Body>\n</Card>\n                   \n                </div>               \n            \n            )\n        })\n       }\n\n\nreturn(\n    \n            <div className={classes.main}>\n            <h1 className={classes.title}>Quiz</h1>\n               {disp}\n            <Button disabled={this.state.disabled}  variant=\"success\" className={classes.button} \n             onClick={this.submit}>Submit</Button>\n            <h1 className={classes.score}>{this.state.score}</h1>\n            </div>\n        )\n    }\n   \n}\n\nexport default Quiz;","import * as React from 'react'\nimport update from 'react-addons-update';\n// import axios from '../../axios_orders';\n// import Button from '../Components/UI/Button/button';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Button,InputGroup,FormControl} from 'react-bootstrap';\n// import Spinner from '../../components/UI/Spinner/Spinner';\n// import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport classes from '../AddQuiz/addquiz.module.css';\nclass Addquiz extends React.Component{\n\nstate={\n    QuestionName:'',\n     options:[{ name: '', selected: false }],\n     answer:''\n  }\n\n  \n    render(){\n     \n//input of busname and no\n\nconst handleNo = event =>{\n  event.preventDefault();\n  if(event.target.name === 'question' ){\n    this.setState({QuestionName:event.target.value});\n  }else{\n      this.setState({answer:event.target.value})\n  }\n  \n}\n\nconst handleSubmit = e => {\n    console.log(this.state)\n}\n    //Submit data method!!\n    //   const handleSubmit = e => {\n    //     e.preventDefault();\n    //     // const formData = {};\n    //     // console.log(this.state);\n    //     // for (let formElementIdentifier in this.state) {\n    //     //     formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    //     // }\n    //     // console.log(formData);\n    //     axios.post( '/buses.json', this.state )\n    //     .then( response => {\n    //       console.log(response.data);\n    //     } )\n    //     .catch( error => {\n    //     } );\n    //     console.log(\"inputFields\", this.state);\n    //   };\n    //   const handleInputChangeState = ( event,indexs) => {\n    //     this.setState({\n    //       names: update(this.state.names, {[indexs]: {stopname: {$set: event.target.value}}})\n    //     })\n\n    //   };\n\n\n      //Updating firstname and lastname Method!!\n      const handleInputChange = (index, event) => {\n        if(event.target.name === 'option'){\n          this.setState({options: update(this.state.options, \n              { [index]: { name: { $set: event.target.value } } } \n        )});\n        }\n    \n        }\n      \n    \n      //Pushing Bus data Method!!\n      const OnhandleAddFields = () => {\n        const values = [...this.state.options];\n        values.push({name:\"\",selected:false\n      });\n        this.setState({options:values});\n      };\n\n      //Popping Bus data Method!!\n      const OnhandleRemoveFields = (indexs) => {\n        const values = [...this.state.options];\n        values.splice(indexs, 1);\n        this.setState({options:values});\n      };\n\n\n    \n\n\n\n    //   {/* <form onSubmit={handleSubmit}> */}\n           let name =      this.state.options.map((inputField, index) => {\n               return(\n<React.Fragment key={`${inputField}~${index}`}>\n  <div className=\"form-group col-sm-6\">\n    <label htmlFor=\"time\">Option</label>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      id=\"option\"\n      name=\"option\"\n      value={inputField.option}\n      onChange={event => handleInputChange(index, event)}\n    />\n  </div>\n \n  <div className=\"form-group col-sm-2\">\n    <button\n      className=\"btn btn-link\"\n      type=\"button\"\n      onClick={() => OnhandleRemoveFields()}\n    >\n      -\n    </button>\n    <button\n      className=\"btn btn-link\"\n      type=\"button\"\n      onClick={() => OnhandleAddFields()}\n    >\n      +\n    </button>\n  </div>\n</React.Fragment>\n               )\n           });\n        \n\n\nreturn (\n<div className={classes.inputMain}>\n<h1>Add Stop Data</h1>\n<InputGroup className=\"mb-3\">\n    <InputGroup.Prepend>\n      <InputGroup.Text id=\"basic-addon1\">Question Name </InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormControl name=\"question\" type=\"text\" value={this.state.QuestionName}\n    onChange={(event) => handleNo(event)}\n      placeholder=\"Enter Question\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </InputGroup>\n   {name}\n   <div className=\"form-group col-sm-6\">\n    <label htmlFor=\"time\">Answer</label>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      id=\"answer\"\n      name=\"answer\"\n      value={this.state.answer}\n      onChange={event => handleNo( event)}\n    />\n  </div>\n<Button variant=\"success\"\ntype=\"submit\"\nonClick={(event) => this.props.add(this.state)}>\nSave\n</Button>     \n<pre>\n {JSON.stringify(this.state, null, 2)}\n</pre>\n</div>\n  )\n          }\n        }\n        export default Addquiz;","import React,{useState} from 'react';\nimport Quiz from './quiz';\nimport Addquiz from './AddQuiz/addquiz';\n\nconst Home = props => {\n\nconst [toogle,setToogle] = useState(false);\nconst [questions,setQuestions] = useState([\n    {\n        QuestionName: 'who is the founder of apple?', options: [{ name: 'Mark', selected: false},\n        { name: 'stevejobs', selected: false }], answer:'stevejobs'\n      },\n      {\n          QuestionName: 'who is the founder of tesla?', options: [{ name: 'Musk', selected: false},\n          { name: 'gates', selected: false }], answer:'Musk'\n        },\n]);\n// const [score,setScore] = useState(0);\n// const [disabled,setDisabled] = useState(false)\n   \nconst addquiz = question => {\n    setQuestions([...questions,question]);\n    setToogle(!toogle);\n}\n  \nlet name = <Quiz data={questions}/>\nif(toogle){\n name = <Addquiz add={addquiz} />\n}\n\nconst toggle = e => {\n    e.preventDefault();\n   setToogle(!toogle);\n  }\n\n    return(\n        <div>\n {name}\n        <button onClick={toggle}>{toogle ? 'Quiz' : 'Add Quiz'}</button>\n        </div>\n       \n\n    )\n}\n\nexport default Home;","import React from 'react';\n// import { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n// import Logout from './container/Auth/Logout/Logout';\n// import* as actions from './store/actions/index';\n// import {connect} from 'react-redux';\n// import asyncComponent from './hoc/asyncComponent/asynComponent';\nimport './App.css';\nimport Home from './quiz/home';\n\n\n\n// const asyncGuest = asyncComponent(() => {\n//   return import('./container/guest/guest');\n// })\n\n// const asyncHome = asyncComponent(()=>{\n//   return import('./container/home/home');\n// })\n\n// const asyncSmelogin = asyncComponent(() => {\n//   return import('./container/Auth/Auth')\n// })\n\n// const asyncMain = asyncComponent(()=>{\n//   return import('./container/Main/main');\n// })\n\n// const asyncForm = asyncComponent(() =>{\n//   return import('./container/Addprofile/addpro');\n// })\n\n\nclass App extends React.Component  {\n\n  \n  // componentDidMount () {\n  //   this.props.onTryAutoSignup();\n  // }\n  \nrender(){\n\n  // let routes = (\n  //   <Switch>\n      \n  //     <Route path=\"/\" exact component={asyncHome}  />\n  //     <Route path=\"/guest\" exact component={asyncGuest}/>\n  //     <Route path=\"/smeauth\" exact component={asyncSmelogin} />\n  //     <Redirect to=\"/\" />\n  //   </Switch>\n  // );\n\n  // if ( this.props.isAuthenticated ) {\n  //   routes = (\n  //     <Switch>\n  //       <Route path=\"/form\" exact component={asyncForm}/>\n  //             <Route path=\"/main\" exact component={asyncMain}/>\n        \n  //       <Route path=\"/logout\" exact component={Logout} /> \n  //       <Route path=\"/\" exact component={asyncHome}  />\n  //     <Route path=\"/guest\" exact component={asyncGuest}/>\n  //     <Route path=\"/smeauth\" exact component={asyncSmelogin} />\n  //       <Redirect to=\"/\" />\n  //     </Switch>\n  //   );\n  //     }\n  \n\n\n\n  return(\n    <div >\n       {/* <Helmet>\n                <style>{'body { background: #5D5F71;  }'}</style>\n            </Helmet> */}\n    \n            <Home/>\n </div>\n  )\n}\n}\n\n\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.auth.token !== null\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onTryAutoSignup: () => dispatch( actions.authCheckState() )\n//   };\n// };\n\n// export default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\nexport default App;","export const updateObject = (oldObject, updatedProperties) => {\n    return{\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    pages:[],\n    purchased:false,\n    token:null,\n    userId:null,\n    error:null,\n    loading:false,\n    form:false,\n    authRedirectPath: '/main'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error:null, loading:true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state,{\n        token:action.idToken,\n        userId:action.userId,\n        error:null,\n        loading:false,\n        form:action.redirectPath\n    });\n}\n\n\nconst authFail = (state,action) => {\n    return updateObject(state,{\n        error:action.error,\n        loading:false\n    });\n}\n\nconst authLogout = (state,action) => {\n    return updateObject(state,{\n        token:null,\n        userId:null\n    })\n};\n\nconst setAuthRedirectPath = (state,action) => {\n    return updateObject(state,{\n        authRedirectPath:action.path\n    });\n};\n\nconst addDataInit = (state) => {\n    return updateObject(state,{purchased:false});\n}\nconst addDataStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst addDataSuccess = (state,action,props) =>{\n    const newPage = updateObject(action.pageData,{id:action.pageId});\n    return updateObject(state,{\n        loading:false,\n        purchased:true,\n        form:false,\n        pages:state.pages.concat(newPage)\n    });\n}\nconst addDataFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:return authStart(state,action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        case actionTypes.ADD_DATA_INIT:return addDataInit(state);\n        case actionTypes.ADD_DATA_START:return addDataStart(state);\n        case actionTypes.ADD_DATA_SUCCESS:return addDataSuccess(state,action);\n        case actionTypes.ADD_DATA_FAIL:return addDataFail(state);\n        // case actionTypes.EDIT_PAGE_INIT:return editPageInit(state);\n        // case actionTypes.EDIT_PAGE_START:return editPageStart(state);\n        // case actionTypes.EDIT_PAGE_SUCCESS:return editPageSuccess(state);\n        // case actionTypes.EDIT_PAGE_FAIL:return editPageFail(state);\n        \n        default: return state\n    }\n}\n\nexport default authReducer;","export const ADD_DATA_START = 'ADD_DATA_START';\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\nexport const ADD_DATA_FAIL = 'ADD_DATA_FAIL';\nexport const ADD_DATA_INIT = 'ADD_DATA_INIT';\n\n\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\nexport const SEARCH_DATA = 'SEARCH_DATA';\n\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    profiles:[],\n    loading:false,\n    purchased:false\n}\n\n\nconst fetchDataStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst fetchDataSuccess = (state,action) => {\n    return updateObject(state, {\n        profiles:action.data,\n        loading:false\n    });\n}\nconst fetchDataFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\nconst profilesReducer = (state = initialState, action) =>{\n    switch (action.type){\n        case actionTypes.FETCH_DATA_START:return fetchDataStart(state);\n        case actionTypes.FETCH_DATA_SUCCESS:return fetchDataSuccess(state,action);  \n        case actionTypes.FETCH_DATA_FAIL:return fetchDataFail(state);\n        default :\n        return state;\n    }\n}\n\nexport default profilesReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose,combineReducers} from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport authReducer from './store/reducers/auth';\nimport profilesReducer from './store/reducers/profiles';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  prodata:profilesReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n<Provider store={store}>\n<BrowserRouter>\n    <App />\n    </BrowserRouter>\n</Provider>\n)\n\nReactDOM.render(app,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"quiz_main__95E-r\",\"card\":\"quiz_card__2Glrw\",\"radio\":\"quiz_radio__2CfC7\",\"button\":\"quiz_button__2cYNz\",\"score\":\"quiz_score__1T3Dx\",\"title\":\"quiz_title__3uM4p\"};"],"sourceRoot":""}