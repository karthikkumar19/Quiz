{"version":3,"sources":["store/actions/actionTypes.js","store/actions/auth.js","store/actions/quiz.js","store/actions/profile.js","shared/utility.js","components/UI/Input/input.module.css","components/UI/Button/button.module.css","components/UI/Spinner/Spinner.js","components/UI/Input/input.js","quiz/Auth/Auth.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Button/button.js","quiz/Auth/Auth.js","quiz/Auth/Logout/Logout.js","hoc/asyncComponent/asynComponent.js","App.js","store/reducers/auth.js","store/reducers/quiz.js","store/reducers/profile.js","index.js"],"names":["ADD_DATA_START","ADD_DATA_SUCCESS","ADD_DATA_FAIL","ADD_DATA_INIT","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAIL","ADD_PROFILE_START","ADD_PROFILE_SUCCESS","ADD_PROFILE_FAIL","ADD_PROFILE_INIT","FETCH_PROFILE_START","FETCH_PROFILE_SUCCESS","FETCH_PROFILE_FAIL","ADD_SCORE_START","ADD_SCORE_SUCCESS","ADD_SCORE_FAIL","ADD_SCORE_INIT","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","authSuccess","idToken","localId","isSignup","type","actionTypes","userId","redirectPath","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","catch","err","error","setAuthRedirectPath","path","authCheckState","token","getItem","addData","quizData","id","quizId","addDataSuccess","name","addDataFail","fetchDataFail","fetchData","get","res","fetchedData","key","push","deleteQuiz","delete","addScore","scoreData","put","scoreId","addScoreSuccess","addScoreFail","addProfile","profileData","profileId","addProfileSuccess","addProfileFail","fetchProfileSuccess","fetchProfileFail","fetchProfileStart","fetchProfile","queryParams","fetchProfiles","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","module","exports","spinner","className","classes","Loader","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","join","elementConfig","onChange","changed","options","map","option","displayValue","Input","Label","label","button","disabled","Button","btnType","onClick","clicked","children","Auth","state","controls","placeholder","validation","valid","inputChangedHandler","event","controlName","updatedControls","target","setState","switchAuthModeHandler","prevState","submitHandler","preventDefault","onAuth","onSetAuthRedirectPath","formElementsArray","this","config","form","formElement","loading","Spinner","errorMessage","message","authRedirect","isAuthenticated","to","authRedirectPath","onSubmit","Component","connect","actions","Logout","console","log","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncAdd","asyncUser","asyncHome","asyncQuiz","asyncQuizes","asyncScores","App","onTryAutoSignup","routes","exact","React","withRouter","initialState","quizes","profile","fetched","authStart","action","authFail","authLogout","addDataInit","addDataStart","newQuiz","concat","addProfileInit","addProfileStart","newProfile","authReducer","questions","fetchDataStart","fetchDataSuccess","updated","addScoreStart","score","quizReducer","profileReducer","composeEnhancers","compose","rootReducer","combineReducers","quizdata","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8c827fb.chunk.js","sourcesContent":["export const ADD_DATA_START = 'ADD_DATA_START';\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\nexport const ADD_DATA_FAIL = 'ADD_DATA_FAIL';\nexport const ADD_DATA_INIT = 'ADD_DATA_INIT';\n\n\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\nexport const SEARCH_DATA = 'SEARCH_DATA';\nexport const DELETE_QUIZ = 'DELETE_QUIZ';\n\nexport const ADD_PROFILE_START = 'ADD_PROFILE_START';\nexport const ADD_PROFILE_SUCCESS = 'ADD_PROFILE_SUCESS';\nexport const ADD_PROFILE_FAIL = 'ADD_PROFILE_FAIL';\nexport const ADD_PROFILE_INIT = 'ADD_PROFILE_INIT';\n\nexport const FETCH_PROFILE_START = 'FETCH_PROFILE_START';\nexport const FETCH_PROFILE_SUCCESS = 'FETCH_PROFILE_SUCESS';\nexport const FETCH_PROFILE_FAIL = 'FETCH_PROFILE_FAIL';\nexport const FETCH_PROFILE_INIT = 'FETCH_PROFILE_INIT';\n\n\n\nexport const ADD_SCORE_START = 'ADD_SCORE_START';\nexport const ADD_SCORE_SUCCESS = 'ADD_SCORE_SUCESS';\nexport const ADD_SCORE_FAIL = 'ADD_SCORE_FAIL';\nexport const ADD_SCORE_INIT = 'ADD_SCORE_INIT';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authstart = () => {\n    return{\n        type:actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (idToken,localId,isSignup) => {\n    return{\n        type:actionTypes.AUTH_SUCCESS,\n        idToken:idToken,\n        userId:localId,\n        redirectPath:isSignup\n    }\n}\n\nexport const authFail = (error) => {\n    return{\n        type:actionTypes.AUTH_FAIL,\n        error:error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return{\n        type:actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        },expirationTime * 1000);\n    };\n};\n\nexport const auth = (email,password,isSignup) => {\n    return dispatch => {\n        dispatch(authstart());\n        const authData = {\n            email:email,\n            password:password,\n            returnSecureToken:true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=    AIzaSyD0TUQh41eKlkiCm0EtOAnTzeJWUe8iFcQ';\n        if(!isSignup){\n           url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key= AIzaSyD0TUQh41eKlkiCm0EtOAnTzeJWUe8iFcQ';\n        }\n        axios.post(url,authData,isSignup)\n        .then(response => {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token',response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId',response.data.localId);\n            dispatch(authSuccess(response.data.idToken,response.data.localId,isSignup));\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error));\n        });\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return{\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\n        path:path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()){\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const addDataSuccess = (id, quizData) => {\n    return{\n        type:actionTypes.ADD_DATA_SUCCESS,\n        quizId: id,\n        quizData:quizData\n    };\n};\n\nexport const addDataFail = (error) => {\n    return{\n        type: actionTypes.ADD_DATA_FAIL,\n        error: error\n    };\n}\n\nexport const addDataStart = () =>{\n    return{\n        type:actionTypes.ADD_DATA_START\n    };\n}\n\nexport const addData = (quizData) => {\n    return dispatch => {\n        dispatch (addDataStart());\n        axios.post( 'https://quiz-4cf36.firebaseio.com/quiz.json',quizData )\n        .then( response => {\n            dispatch(addDataSuccess(response.data.name, quizData));\n        } )\n        .catch( error => {\n            dispatch(addDataFail(error));\n        } );\n    }\n}\n\nexport const addDataInit = () => {\n    return {\n        type:actionTypes.ADD_DATA_INIT\n    };\n};\n\nexport const fetchDataSuccess = (data) => {\n    return{\n        type:actionTypes.FETCH_DATA_SUCCESS,\n        data:data\n    };\n};\n\nexport const fetchDataFail = (error) =>{\n    return{\n        type:actionTypes.FETCH_DATA_FAIL,\n        error:error\n    };\n};\n\nexport const fetchDataStart = () => {\n    return{\n        type:actionTypes.FETCH_DATA_START\n    };\n};\n\n\n\nexport const fetchData = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchDataStart());\n        // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('https://quiz-4cf36.firebaseio.com/quiz.json' )\n            .then(res => {\n                const fetchedData = [];\n                for (let key in res.data) {\n                    fetchedData.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchDataSuccess(fetchedData));\n            })\n            .catch(err => {\n                dispatch(fetchDataFail(err));\n            });\n    }\n}\n\nexport const deleteQuiz = (id) => {\n    return dispatch => {\n        axios.delete('https://quiz-4cf36.firebaseio.com/quiz/'+ id + '.json')\n        .then(() => {\n            dispatch(fetchData());\n        })\n            \n    \n        .catch(err => {\n            dispatch(fetchDataFail(err));\n        });\n    }\n}\n\nexport const addScoreSuccess = (id, scoreData) => {\n    return{\n        type:actionTypes.ADD_SCORE_SUCCESS,\n        scoreId: id,\n        scoreData:scoreData\n    };\n};\n\nexport const addScoreFail = (error) => {\n    return{\n        type: actionTypes.ADD_SCORE_FAIL,\n        error: error\n    };\n}\n\nexport const addScoreStart = () =>{\n    return{\n        type:actionTypes.ADD_SCORE_START\n    };\n}\n\nexport const addScore = (id,scoreData) => {\n    return dispatch => {\n        dispatch (addScoreStart());\n        axios.put( `https://quiz-4cf36.firebaseio.com/profile/${id}/score.json`,scoreData )\n        .then( response => {\n            dispatch(addScoreSuccess(response.data.name, scoreData));\n        } )\n        .catch( error => {\n            dispatch(addScoreFail(error));\n        } );\n    }\n}\n\nexport const addScoreInit = () => {\n    return {\n        type:actionTypes.ADD_SCORE_INIT\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const addProfileSuccess = (id, profileData) => {\n    return{\n        type:actionTypes.ADD_PROFILE_SUCCESS,\n        profileId: id,\n        profileData:profileData\n    };\n};\n\nexport const addProfileFail = (error) => {\n    return{\n        type: actionTypes.ADD_PROFILE_FAIL,\n        error: error\n    };\n}\n\nexport const addProfileStart = () =>{\n    return{\n        type:actionTypes.ADD_PROFILE_START\n    };\n}\n\nexport const addProfile = (profileData,token) => {\n    return dispatch => {\n        dispatch (addProfileStart());\n        axios.post( 'https://quiz-4cf36.firebaseio.com/profile.json?auth=' + token,profileData )\n        .then( response => {\n            dispatch(addProfileSuccess(response.data.name, profileData));\n        } )\n        .catch( error => {\n            dispatch(addProfileFail(error));\n        } );\n    }\n}\n\nexport const addProfileInit = () => {\n    return {\n        type:actionTypes.ADD_DATA_INIT\n    };\n};\n\nexport const fetchProfileSuccess = (data) => {\n    return{\n        type:actionTypes.FETCH_PROFILE_SUCCESS,\n        data:data\n    };\n};\n\nexport const fetchProfileFail = (error) =>{\n    return{\n        type:actionTypes.FETCH_PROFILE_FAIL,\n        error:error\n    };\n};\n\nexport const fetchProfileStart = () => {\n    return{\n        type:actionTypes.FETCH_PROFILE_START\n    };\n};\n\n\n\nexport const fetchProfile = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchProfileStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('https://quiz-4cf36.firebaseio.com/profile.json' + queryParams )\n            .then(res => {\n                const fetchedData = [];\n                for (let key in res.data) {\n                    fetchedData.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n               \n               \n                dispatch(fetchProfileSuccess(fetchedData));\n            })\n            .catch(err => {\n                dispatch(fetchProfileFail(err));\n            });\n    }\n}\n\n\n\n\n\n\nexport const fetchProfiles = () => {\n    return dispatch => {\n        dispatch(fetchProfileStart());\n        // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('https://quiz-4cf36.firebaseio.com/profile.json'  )\n            .then(res => {\n                const fetchedData = [];\n                for (let key in res.data) {\n                    fetchedData.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n               \n               \n                dispatch(fetchProfileSuccess(fetchedData));\n            })\n            .catch(err => {\n                dispatch(fetchProfileFail(err));\n            });\n    }\n}","export const updateObject = (oldObject, updatedProperties) => {\n    return{\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3BPgK\",\"Label\":\"input_Label__24bIE\",\"InputElement\":\"input_InputElement__2HI6E\",\"Invalid\":\"input_Invalid__3QqA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__2rvm5\",\"Success\":\"button_Success__2fkNB\",\"Danger\":\"button_Danger__3R9zs\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","  \nimport React from 'react';\n\nimport classes from './input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div>\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n        </div>\n    );\n\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3Qly3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React from 'react';\n\nimport classes from './button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, {Component} from 'react';\nimport Input from  '../../components/UI/Input/input';\nimport Button from '../../components/UI/Button/button';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {updateObject , checkValidity} from '../../shared/utility';\n\nclass Auth extends Component {\n\n    state={\n        controls:{\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Your Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength:6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        isSignup:true\n    }\n\n\n    \n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls,{\n            [controlName]: updateObject(this.state.controls[controlName],{\n                value:event.target.value,\n                valid:checkValidity(event.target.value,this.state.controls[controlName].validation),\n                touched:true\n            }) \n        });\n        this.setState({controls:updatedControls});\n    }\n\n    switchAuthModeHandler = () =>{\n        this.setState(prevState => {\n            return{isSignup: !prevState.isSignup};\n        })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup);\n        this.props.onSetAuthRedirectPath();\n    }\n    \n\n    render(){\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n        let form = formElementsArray.map( formElement => (\n            <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n        ));\n\n        if(this.props.loading){\n            form = <Spinner/>\n        }\n\n        let errorMessage = null;\n\n        if(this.props.error){\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            )\n        }\n\n        let authRedirect = null;\n        if(this.props.isAuthenticated){\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\n        }\n\n        return(\n            <div className={classes.Auth}>\n                \n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button clicked={this.switchAuthModeHandler}\n                 btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP' }</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading:state.auth.loading,\n        error:state.auth.error,\n        isAuthenticated:state.auth.token != null,\n        authRedirectPath:state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email,password,isSignup)),\n        onSetAuthRedirectPath : () => dispatch(actions.setAuthRedirectPath('/user'))\n\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React, {Component} from 'react';\nimport * as actions from '../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\n\nclass Logout extends Component {\n\n        componentDidMount () {\n            console.log(\"logout\");\n                this.props.onLogout();\n        }\n\n    render(){\n        return <Redirect to=\"/\" />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onLogout : () => dispatch(actions.logout()),\n    };\n};\n\nexport default connect(null,mapDispatchToProps) (Logout);","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default});\n                });\n        }\n        \n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport* as actions from './store/actions/index';\nimport {connect} from 'react-redux';\nimport Auth from './quiz/Auth/Auth';\nimport Logout from './quiz/Auth/Logout/Logout';\nimport asyncComponent from './hoc/asyncComponent/asynComponent';\n\n\n\n\nconst asyncAdd = asyncComponent(() => {\n  return import('./quiz/AddQuiz/addquiz');\n})\n\nconst asyncUser = asyncComponent(() => {\n  return import('./quiz/user/user');\n})\n\nconst asyncHome = asyncComponent(() => {\n  return import ('./quiz/home');\n})\n\nconst asyncQuiz = asyncComponent(() => {\n  return import ('./quiz/quiz');\n})\n\nconst asyncQuizes = asyncComponent(() => {\n  return import ('./quiz/Quizes/quizes');\n})\n\nconst asyncScores = asyncComponent(() => {\n  return import ('./quiz/Scores/scores');\n})\n\nclass App extends React.Component  {\n\n  \n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n  \nrender(){\n\n  let routes = (\n    <Switch>\n            <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" exact component={asyncHome}  />\n      <Route path=\"/add\" exact component={asyncAdd} />\n\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if ( this.props.isAuthenticated ) {\n    routes = (\n      <Switch>\n        <Route path=\"/quizes\" exact component={asyncQuizes}></Route>\n              <Route path=\"/quiz\" exact component={asyncQuiz}/> \n        <Route path=\"/user\" component={asyncUser}/>\n         <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={Auth}  />\n        <Route path=\"/scores\" exact component={asyncScores} />\n       <Route path=\"/add\" exact component={asyncAdd} />\n      <Redirect to=\"/\" />\n      </Switch>\n    );\n      }\n  \n\n\n\n  return(\n    <div  >\n       \n    \n            {routes}\n </div>\n  )\n}\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    quizes:[],\n    profile:[],\n    fetched:false,\n    token:null,\n    userId:null,\n    form:false,\n    error:null,\n    loading:false,\n    authRedirectPath: '/user'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error:null, loading:true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state,{\n        token:action.idToken,\n        userId:action.userId,\n        error:null,\n        loading:false,\n        form:action.redirectPath\n    });\n}\n\n\nconst authFail = (state,action) => {\n    return updateObject(state,{\n        error:action.error,\n        loading:false\n    });\n}\n\nconst authLogout = (state,action) => {\n    return updateObject(state,{\n        token:null,\n        userId:null\n    })\n};\n\nconst setAuthRedirectPath = (state,action) => {\n    return updateObject(state,{\n        authRedirectPath:action.path\n    });\n};\n\nconst addDataInit = (state) => {\n    return updateObject(state,{fetched:false});\n}\nconst addDataStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst addDataSuccess = (state,action,props) =>{\n    const newQuiz = updateObject(action.quizData,{id:action.quizId});\n    return updateObject(state,{\n        loading:false,\n        fetched:true,\n        quizes:state.quizes.concat(newQuiz)\n    });\n}\nconst addDataFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\nconst addProfileInit = (state) => {\n    return updateObject(state,{fetched:false,\n    });\n}\nconst addProfileStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst addProfileSuccess = (state,action,props) =>{\n    const newProfile = updateObject(action.profileData,{id:action.profileId});\n    return updateObject(state,{\n        loading:false,\n        fetched:true,\n        form:false,\n        profile:state.profile.concat(newProfile)\n    });\n}\nconst addProfileFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:return authStart(state,action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        case actionTypes.ADD_DATA_INIT:return addDataInit(state);\n        case actionTypes.ADD_DATA_START:return addDataStart(state);\n        case actionTypes.ADD_DATA_SUCCESS:return addDataSuccess(state,action);\n        case actionTypes.ADD_DATA_FAIL:return addDataFail(state);\n        case actionTypes.ADD_PROFILE_INIT:return addProfileInit(state);\n        case actionTypes.ADD_PROFILE_START:return addProfileStart(state);\n        case actionTypes.ADD_PROFILE_SUCCESS:return addProfileSuccess(state,action);\n        case actionTypes.ADD_PROFILE_FAIL:return addProfileFail(state);\n       \n        // case actionTypes.EDIT_PAGE_INIT:return editPageInit(state);\n        // case actionTypes.EDIT_PAGE_START:return editPageStart(state);\n        // case actionTypes.EDIT_PAGE_SUCCESS:return editPageSuccess(state);\n        // case actionTypes.EDIT_PAGE_FAIL:return editPageFail(state);\n        \n        default: return state\n    }\n}\n\nexport default authReducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    questions:[],\n    loading:false,\n    fetched:false,\n}\n\n\n\nconst fetchDataStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst fetchDataSuccess = (state,action) => {\n    return updateObject(state, {\n        questions:action.data,\n        loading:false,\n        fetched:true,\n        updated:false\n    });\n}\nconst fetchDataFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\nconst addScoreStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst addScoreSuccess = (state,action) => {\n    return updateObject(state, {\n        score:action.data,\n        loading:false,\n        fetched:true,\n        updated:true\n    });\n}\nconst addScoreFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\nconst quizReducer = (state = initialState, action) =>{\n    switch (action.type){\n        case actionTypes.FETCH_DATA_START:return fetchDataStart(state);\n        case actionTypes.FETCH_DATA_SUCCESS:return fetchDataSuccess(state,action);  \n        case actionTypes.FETCH_DATA_FAIL:return fetchDataFail(state);\n        case actionTypes.ADD_SCORE_START:return addScoreStart(state);\n        case actionTypes.ADD_SCORE_SUCCESS:return addScoreSuccess(state,action);  \n        case actionTypes.ADD_SCORE_FAIL:return addScoreFail(state);\n\n        default :\n        return state;\n    }\n}\n\nexport default quizReducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    profile:[],\n    loading:false,\n    fetched:false,\n    authRedirectPath: '/user'\n}\n\n\n\nconst fetchProfileStart = (state) => {\n    return updateObject(state,{loading:true});\n}\nconst fetchProfileSuccess = (state,action) => {\n    return updateObject(state, {\n        profile:action.data,\n        loading:false,\n        fetched:true\n    });\n}\nconst fetchProfileFail = (state) => {\n    return updateObject(state,{loading:false});\n}\n\nconst profileReducer = (state = initialState, action) =>{\n    switch (action.type){\n        case actionTypes.FETCH_PROFILE_START:return fetchProfileStart(state);\n        case actionTypes.FETCH_PROFILE_SUCCESS:return fetchProfileSuccess(state,action);  \n        case actionTypes.FETCH_PROFILE_FAIL:return fetchProfileFail(state);\n       \n        default :\n        return state;\n    }\n}\n\nexport default profileReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose,combineReducers} from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport authReducer from './store/reducers/auth';\nimport quizReducer from './store/reducers/quiz';\nimport profileReducer from './store/reducers/profile';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  quizdata:quizReducer,\n  profile:profileReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n<Provider store={store}>\n<BrowserRouter >\n    <App />\n    </BrowserRouter>\n</Provider>\n)\n\nReactDOM.render(app,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}